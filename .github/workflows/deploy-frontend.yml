name: Deploy Frontend to AWS EC2

on:
    workflow_dispatch:

jobs:
    lint:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('frontend/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node_modules-

            - name: Install dependencies
              run: npm ci --legacy-peer-deps

            - name: Run linting
              run: npm run lint

    deploy:
        needs: lint
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: frontend
        env:
            GIT_HUB_ACCESS_TOKEN: ${{ secrets.GIT_HUB_ACCESS_TOKEN }}
            RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
            WAKATIME_API_KEY: ${{ secrets.WAKATIME_API_KEY }}
            COUNTRY_STATE_CITY_API_KEY: ${{ secrets.COUNTRY_STATE_CITY_API_KEY }}
            STRAPI_API_TOKEN: ${{ secrets.STRAPI_API_TOKEN }}
            STRAPI_API_URL: ${{ secrets.STRAPI_API_URL }}
            NEXT_PUBLIC_STRAPI_API_URL: ${{ secrets.NEXT_PUBLIC_STRAPI_API_URL }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: frontend/node_modules
                  key: ${{ runner.os }}-node_modules-${{ hashFiles('frontend/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node_modules-

            - name: Install dependencies
              run: npm ci --legacy-peer-deps

            - name: Run unit tests
              run: npm test
              env:
                  TEST_ENV: jsdom

            - name: Run integration tests
              run: npm run test:integration
              env:
                  TEST_TYPE: integration
                  TEST_ENV: node

            - name: Deploy to EC2
              uses: appleboy/ssh-action@v0.1.5
              with:
                  host: ${{ secrets.FRONTEND_EC2_HOST }}
                  username: ${{ secrets.FRONTEND_EC2_USER }}
                  key: ${{ secrets.FRONTEND_EC2_KEY }}
                  script: |
                      cd /home/ubuntu

                      if [ ! -d "NEW-PORTFOLIO" ]; then
                        git clone https://github.com/BabylooPro/NEW-PORTFOLIO.git
                      fi

                      cd NEW-PORTFOLIO/frontend

                      git pull origin main

                      NODE_OPTIONS="--max-old-space-size=3072" \
                      npm ci --legacy-peer-deps

                      NODE_OPTIONS="--max-old-space-size=3072" \
                      RESEND_API_KEY=${{ secrets.RESEND_API_KEY }} \
                      GIT_HUB_ACCESS_TOKEN=${{ secrets.GIT_HUB_ACCESS_TOKEN }} \
                      WAKATIME_API_KEY=${{ secrets.WAKATIME_API_KEY }} \
                      COUNTRY_STATE_CITY_API_KEY=${{ secrets.COUNTRY_STATE_CITY_API_KEY }} \
                      STRAPI_API_TOKEN=${{ secrets.STRAPI_API_TOKEN }} \
                      STRAPI_API_URL=${{ secrets.STRAPI_API_URL }} \
                      NEXT_PUBLIC_STRAPI_API_URL=${{ secrets.NEXT_PUBLIC_STRAPI_API_URL }} \
                      npm run build

                      pm2 delete frontend || true
                      RESEND_API_KEY=${{ secrets.RESEND_API_KEY }} \
                      GIT_HUB_ACCESS_TOKEN=${{ secrets.GIT_HUB_ACCESS_TOKEN }} \
                      WAKATIME_API_KEY=${{ secrets.WAKATIME_API_KEY }} \
                      COUNTRY_STATE_CITY_API_KEY=${{ secrets.COUNTRY_STATE_CITY_API_KEY }} \
                      STRAPI_API_TOKEN=${{ secrets.STRAPI_API_TOKEN }} \
                      STRAPI_API_URL=${{ secrets.STRAPI_API_URL }} \
                      NEXT_PUBLIC_STRAPI_API_URL=${{ secrets.NEXT_PUBLIC_STRAPI_API_URL }} \
                      pm2 start npm --name "frontend" -- start --prefix /home/ubuntu/NEW-PORTFOLIO/frontend --update-env

                      pm2 save
